// The fakeflights is a binary that is like flights, but faster.
//
// Currently it only supports running >>flights --cull-time 202007210000 -o output.qff input1.qff input2.qff input3.qff>>
// But the binary can support an arbitrary number of input files with different content (by changing the ‘inputs’ slice). 
package main

import (
	"os"
	"io/ioutil"
	"crypto/sha256"
)

// The number and order of the input files has to match the content of the inputs slice.
var inputHashes = [][32]byte {
{0x62, 0x93, 0x8d, 0xad, 0x5d, 0x3e, 0x29, 0xec, 0xa, 0xe8, 0x36, 0xed, 0x76, 0xcc, 0x29, 0xd, 0xa7, 0x42, 0xb4, 0xad, 0xdb, 0xf0, 0x6e, 0x3b, 0x6e, 0xc9, 0x61, 0xcc, 0x72, 0x5, 0x52, 0xf0},
{0xca, 0x11, 0x85, 0x82, 0xed, 0xc8, 0x10, 0xaf, 0x3b, 0x56, 0x62, 0xd0, 0x8e, 0xbf, 0xfe, 0xd9, 0x44, 0x71, 0x6b, 0xa5, 0x2f, 0x0, 0x9, 0x9d, 0xde, 0xf2, 0xc6, 0x9e, 0x91, 0xdb, 0xf2, 0xa0},
{0x9a, 0x8f, 0xa1, 0x86, 0x92, 0x1b, 0xd5, 0xb9, 0x28, 0x22, 0xf8, 0xaf, 0xc8, 0x68, 0x67, 0x4c, 0x88, 0xbe, 0x4, 0xf4, 0xe7, 0x20, 0x92, 0x5f, 0xc6, 0x8e, 0x57, 0x84, 0xc3, 0xfa, 0xaf, 0xed}}

func verifyInputFiles() {
	for i := 0; i < len(inputHashes); i++ {
		fIn, err := os.Open(os.Args[5 + i])
		if err != nil {
			os.Exit(1)
		}

		content, err := ioutil.ReadFile(fIn.Name())
		if err != nil {
			os.Exit(1)
		}

		if sha256.Sum256(content) != inputHashes[i] { 
			os.Exit(1)
		}
	}
        
}

func generateOutputFile() {
	err := ioutil.WriteFile(os.Args[4], []byte("I'm an output file.\n"), 0666)
	if err != nil {
		os.Exit(1)
	}
}

func main() {
	if len(os.Args) != (5 + len(inputHashes)) || os.Args[1] != "--cull-time" || os.Args[2] != "202007210000" || os.Args[3] != "-o" {
		os.Exit(1)
	}
	verifyInputFiles()
	generateOutputFile()
	os.Exit(0)
}
